ARG RESTY_IMAGE_BASE="ubuntu"
ARG RESTY_IMAGE_TAG="20.04"

FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}

# Docker Build Arguments
ARG RESTY_IMAGE_BASE="ubuntu"
ARG RESTY_IMAGE_TAG="20.04"
ARG RESTY_VERSION="1.21.4.1"
ARG RESTY_LUAROCKS_VERSION="3.9.0"
ARG RESTY_J="1"
ARG NGINX_EXTRA_MODULES_ROOT_PATH="/src"
ARG NGINX_KALMEDIA="media-framework"
ARG RESTY_CONFIG_OPTIONS="\
    --with-compat \
    --with-file-aio \
    --with-ipv6 \
    --with-md5-asm \
    --with-sha1-asm \
    --with-stream \
    --with-threads \
    --with-http_dav_module                                \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-common            \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-kmp-in-module     \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-kmp-out-module    \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-rtmp-module       \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-rtmp-kmp-module   \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-mpegts-module     \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-mpegts-kmp-module \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-kmp-cc-module     \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-kmp-rtmp-module   \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-live-module       \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/$NGINX_KALMEDIA/nginx-pckg-module       \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/nginx-srt-module                        \
    --add-module=$NGINX_EXTRA_MODULES_ROOT_PATH/nginx-stream-preread-str-module         \
    "


ARG RESTY_CONFIG_OPTIONS_MORE=" --with-cc-opt='-I/usr/local/include' \
    --with-ld-opt='-L/usr/local/lib -Wl,-rpath,/usr/local/lib' \
    "
#    /usr/local/include/srt
#/usr/local/include/srt/srt.h
#/usr/local/bin/srt-tunnel
#/usr/local/bin/srt-live-transmit
#/usr/local/bin/srt-ffplay
#/usr/local/bin/srt-file-transmit
#/usr/local/lib/libsrt.a
#/usr/local/lib/libsrt.so.1.5
#/usr/local/lib/pkgconfig/srt.pc
#/usr/local/lib/pkgconfig/haisrt.pc
#/usr/local/lib/libsrt.so
#/usr/local/lib/libsrt.so.1.5.2
ARG RESTY_LUAJIT_OPTIONS="--with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT'"

ARG RESTY_ADD_PACKAGE_BUILDDEPS=""
ARG RESTY_ADD_PACKAGE_RUNDEPS=""
ARG RESTY_EVAL_PRE_CONFIGURE=""
ARG RESTY_EVAL_POST_MAKE=""


LABEL resty_image_base="${RESTY_IMAGE_BASE}"
LABEL resty_image_tag="${RESTY_IMAGE_TAG}"
LABEL resty_version="${RESTY_VERSION}"
LABEL resty_luarocks_version="${RESTY_LUAROCKS_VERSION}"
LABEL resty_config_options="${RESTY_CONFIG_OPTIONS}"
LABEL resty_config_options_more="${RESTY_CONFIG_OPTIONS_MORE}"
LABEL resty_add_package_builddeps="${RESTY_ADD_PACKAGE_BUILDDEPS}"
LABEL resty_add_package_rundeps="${RESTY_ADD_PACKAGE_RUNDEPS}"
LABEL resty_eval_pre_configure="${RESTY_EVAL_PRE_CONFIGURE}"
LABEL resty_eval_post_make="${RESTY_EVAL_POST_MAKE}"
LABEL resty_luajit_options="${RESTY_LUAJIT_OPTIONS}"

# install dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		build-essential \
		gcc \
		make \
		perl \
		curl \
                tclsh \
                cmake \
                php-fpm \
                php-curl \
		libpcre3 \
		libpcre3-dev \
		openssl \
		libssl-dev \
		gettext-base \
		zlib1g-dev \
		unzip \
                wget \
                software-properties-common \
		${RESTY_ADD_PACKAGE_BUILDDEPS} \
		${RESTY_ADD_PACKAGE_RUNDEPS} \
	&& rm -rf /var/lib/apt/lists/* \
	&& cd /tmp \
	&& if [ -n "${RESTY_EVAL_PRE_CONFIGURE}" ]; then eval $(echo ${RESTY_EVAL_PRE_CONFIGURE}); fi
# ffmpeg
RUN apt-get update && \
  apt-get install -y --no-install-recommends ffmpeg git

WORKDIR  ${NGINX_EXTRA_MODULES_ROOT_PATH}
# get all dependencies
RUN git clone https://github.com/kaltura/${NGINX_KALMEDIA} && \
    git clone https://github.com/Haivision/srt && \
    git clone https://github.com/kaltura/nginx-srt-module && \
    git clone https://github.com/kaltura/nginx-stream-preread-str-module
# build libsrt
RUN cd srt && \
    ./configure && \
    make && \
    make install

# build/install openresty
RUN  cd /tmp \
        && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \
	&& tar xzf openresty-${RESTY_VERSION}.tar.gz \
	&& cd /tmp/openresty-${RESTY_VERSION} \
	&& eval ./configure -j${RESTY_J} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} ${RESTY_LUAJIT_OPTIONS} \
	&& make -j${RESTY_J} \
	&& make -j${RESTY_J} install \
	&& cd /tmp \
	&& rm -rf openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} \
	&& curl -fSL https://luarocks.github.io/luarocks/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
	&& tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
	&& cd luarocks-${RESTY_LUAROCKS_VERSION} \
	&& ./configure \
		--prefix=/usr/local/openresty/luajit \
		--with-lua=/usr/local/openresty/luajit \
		--lua-suffix=jit-2.1.0-beta3 \
		--with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \
	&& make build \
	&& make install \
	&& if [ -n "${RESTY_EVAL_POST_MAKE}" ]; then eval $(echo ${RESTY_EVAL_POST_MAKE}); fi \
	&& rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
	&& if [ -n "${RESTY_ADD_PACKAGE_BUILDDEPS}" ]; then DEBIAN_FRONTEND=noninteractive apt-get remove -y --purge ${RESTY_ADD_PACKAGE_BUILDDEPS} ; fi \
	&& DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \
	&& mkdir -p /var/run/openresty \
	&& ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \
	&& ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log

# Add additional binaries into PATH for convenience
ENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin

# Add LuaRocks paths
# If OpenResty changes, these may need updating:
#    /usr/local/openresty/bin/resty -e 'print(package.path)'
#    /usr/local/openresty/bin/resty -e 'print(package.cpath)'
ENV LUA_PATH="/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua"

ENV LUA_CPATH="/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so"

CMD ["/usr/local/openresty/bin/openresty", "-g", "daemon off;"]

# Use SIGQUIT instead of default SIGTERM to cleanly drain requests
# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls
STOPSIGNAL SIGQUIT

